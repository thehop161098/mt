version: "3.8"

services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - .docker/nginx/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
      - queue-network
      - db-network
    depends_on:
      - db
      - redis
      - laravel_echo_server

  #Nginx Service

  webserver:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "4001:8080"
    volumes:
      - ./:/var/www/html:ro
      - .docker/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - .docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - .docker/nginx/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
    # user: nginx

  # phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: rootpass
    depends_on:
      - db
    networks:
      - db-network

  #MySQL Service
  db:
    # image: mysql:5.7.22
    image: mysql
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - .docker/data/db:/var/lib/mysql
      - .docker/data/mysql-files:/var/lib/mysql-files
      - .docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - db-network
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 30s
      timeout: 10s
      retries: 5
    # user: "1000:994"

  laravel_echo_server:
    build:
      context: .docker/laravel-echo
      dockerfile: Dockerfile
    volumes:
      - .env:/app/.env
      - .docker/laravel-echo:/app
      - ./logs/laravel-echo:/app/logs
    restart: unless-stopped
    env_file:
      - ./.env
    networks:
      - queue-network # laravel echo needs to access to redis to take message and broadcast
      - app-network # laravel echo needs to access app network to authenticate through webserver
      - db-network
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:6001 || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:5-alpine
    command:
      [
        "redis-server",
        "/etc/redis/redis.conf",
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--bind",
        "0.0.0.0",
      ]
    volumes:
      - .docker/data/redis:/data
      - .docker/redis.conf:/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - queue-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    # user: "1000:994"

#Docker Networks
networks:
  app-network:
    driver: bridge
  queue-network:
    driver: bridge
  db-network:
    driver: bridge
